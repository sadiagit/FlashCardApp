// <auto-generated />
using System;
using FlashCard.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlashCard.DataModel.Migrations
{
    [DbContext(typeof(FlashCardContext))]
    [Migration("20190919041139_UpdatedFlashCardModel")]
    partial class UpdatedFlashCardModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlashCard.DataModel.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<int?>("ParentCategoryId");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("FlashCard.DataModel.Models.FlashCard", b =>
                {
                    b.Property<int>("FlashCardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("FlashCardTypeTypeId");

                    b.Property<DateTime>("LastModifiedOn");

                    b.Property<string>("Question");

                    b.HasKey("FlashCardId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FlashCardTypeTypeId");

                    b.ToTable("FlashCard");
                });

            modelBuilder.Entity("FlashCard.DataModel.Models.FlashCardType", b =>
                {
                    b.Property<string>("TypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("TypeId");

                    b.ToTable("FlashCardType");
                });

            modelBuilder.Entity("FlashCard.DataModel.Models.Category", b =>
                {
                    b.HasOne("FlashCard.DataModel.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("FlashCard.DataModel.Models.FlashCard", b =>
                {
                    b.HasOne("FlashCard.DataModel.Models.Category", "Category")
                        .WithMany("FlashCards")
                        .HasForeignKey("CategoryId");

                    b.HasOne("FlashCard.DataModel.Models.FlashCardType", "FlashCardType")
                        .WithMany()
                        .HasForeignKey("FlashCardTypeTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
